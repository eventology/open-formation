config:
  imageName: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20170414
  type: t2.small
  keyName: cosmunity
  region: us-east-1
  IamInstanceProfile:
    Arn: arn:aws:iam::712623285669:instance-profile/ec2-ecs-role
machines:
  formation:
  - zone: us-east-1e
    BlockDeviceMappings:
    - DeviceName: "/dev/sda1"
      Ebs:
        VolumeSize: 50
        VolumeType: gp2
    - DeviceName: "/dev/sdf"
      Ebs:
        VolumeSize: 50
        VolumeType: gp2
  - zone: us-east-1a
    BlockDeviceMappings:
    - DeviceName: "/dev/sda1"
      Ebs:
        VolumeSize: 50
        VolumeType: gp2
    - DeviceName: "/dev/sdf"
      Ebs:
        VolumeSize: 50
        VolumeType: gp2
  - zone: us-east-1b
    BlockDeviceMappings:
    - DeviceName: "/dev/sda1"
      Ebs:
        VolumeSize: 50
        VolumeType: gp2
    - DeviceName: "/dev/sdf"
      Ebs:
        VolumeSize: 50
        VolumeType: gp2
scripts:
  default:
  - export DEBIAN_FRONTEND=noninteractive
  - sudo apt-get update
  - sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
    $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get install -y docker-ce
  - sudo usermod -aG docker ubuntu
  - echo 'Configuring ECS agent'
  - sudo sh -c "echo 'net.ipv4.conf.all.route_localnet = 1' >> /etc/sysctl.conf"
  - sudo sysctl -p /etc/sysctl.conf
  - sudo iptables -t nat -A PREROUTING -p tcp -d 169.254.170.2 --dport 80 -j DNAT
    --to-destination 127.0.0.1:51679
  - sudo iptables -t nat -A OUTPUT -d 169.254.170.2 -p tcp -m tcp --dport 80 -j REDIRECT
    --to-ports 51679
  - sudo sh -c 'iptables-save > /etc/iptables/rules.v4'
  - sudo mkdir -p /etc/ecs && sudo touch /etc/ecs/ecs.config
  - echo 'ECS_DATADIR=/data' | sudo tee -a /etc/ecs/ecs.config
  - echo 'ECS_ENABLE_TASK_IAM_ROLE=true' | sudo tee -a /etc/ecs/ecs.config
  - echo 'ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST=true' | sudo tee -a /etc/ecs/ecs.config
  - echo 'ECS_CLUSTER=ofn' | sudo tee -a /etc/ecs/ecs.config
  - sudo docker run --name ecs-agent --detach=true --restart=on-failure:10 --volume=/var/run:/var/run
    --volume=/var/log/ecs/:/log --volume=/var/lib/ecs/data:/data --volume=/etc/ecs:/etc/ecs
    --net=host --env-file=/etc/ecs/ecs.config amazon/amazon-ecs-agent:latest
services:
  sshd:
    cluster: ofn
    desiredCount: 3
    taskDefinition:
      networkMode: bridge
      taskRoleArn: arn:aws:iam::712623285669:role/Juggler
      containerDefinitions:
      - volumesFrom: []
        memory:
        extraHosts:
        dnsServers:
        disableNetworking:
        dnsSearchDomains:
        portMappings:
        - hostPort: 2222
          containerPort: 22
          protocol: tcp
        hostname:
        essential: true
        entryPoint:
        mountPoints: []
        name: sshd
        ulimits:
        dockerSecurityOptions:
        environment: []
        links:
        workingDirectory:
        readonlyRootFilesystem:
        image: registry.hub.docker.com/rastasheep/ubuntu-sshd:16.04
        command:
        user:
        dockerLabels:
        cpu: 256
        privileged:
        memoryReservation: 128
      placementConstraints: []
      volumes: []
      family: sshd
